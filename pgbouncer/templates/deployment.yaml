apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "pgbouncer.fullname" . }}
  labels:
    app: {{ template "pgbouncer.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels: {{ include "pgbouncer.templateSelector" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.exporter.enabled }}
        prometheus.io/path: /metrics
        prometheus.io/port: {{ .Values.exporter.listen_port | quote }}
        prometheus.io/scrape: "true"
        {{- end }}
      labels:
        app: {{ template "pgbouncer.name" . }}
        release: {{ .Release.Name }}
    spec:
    {{- if or .Values.podAntiAffinity.enabled .Values.affinity }}
      affinity:
      {{- if .Values.podAntiAffinity.enabled }}
        podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: app
                        operator: In
                        values:
                          - {{ template "pgbouncer.name" . }}
                      - key: release
                        operator: In
                        values:
                          - {{ .Release.Name }}
                  topologyKey: "kubernetes.io/hostname"
      {{- end }}
      {{- if .Values.affinity }}
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
    {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "pgbouncer.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.pgbouncer.listen_port }}
          command:
            - /usr/bin/pgbouncer
          args:
            - -upgbouncer
            - /etc/pgbouncer/pgbouncer.ini
          volumeMounts:
            - name: config
              mountPath: /etc/pgbouncer
          livenessProbe:
            tcpSocket:
              port: {{ .Values.pgbouncer.listen_port }}
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: {{ .Values.pgbouncer.listen_port }}
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.exporter.enabled }}
        - name: {{ .Chart.Name }}-exporter
          image: "{{ .Values.exporter.image.repository }}:{{ .Values.exporter.image.tag }}"
          imagePullPolicy: {{ .Values.exporter.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.exporter.listen_port }}
          command:
            - /pgbouncer_exporter
          args:
            - --pgBouncer.connectionString=postgres://pgbouncer:pgbouncer@127.0.0.1:{{ .Values.pgbouncer.listen_port }}/pgbouncer?sslmode=disable
            - --web.listen-address={{ .Values.exporter.listen_address }}:{{ .Values.exporter.listen_port }}
          livenessProbe:
            httpGet:
              port: {{ .Values.exporter.listen_port }}
              path: /metrics
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 30
          readinessProbe:
            httpGet:
              port: {{ .Values.exporter.listen_port }}
              path: /metrics
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
          resources:
{{ toYaml .Values.exporter.resources | indent 12 }}
{{ end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
